{"message":"expected value, found module `self`","code":{"code":"E0424","explanation":"The `self` keyword was used inside of an associated function without a \"`self`\nreceiver\" parameter.\n\nErroneous code example:\n\n```compile_fail,E0424\nstruct Foo;\n\nimpl Foo {\n    // `bar` is a method, because it has a receiver parameter.\n    fn bar(&self) {}\n\n    // `foo` is not a method, because it has no receiver parameter.\n    fn foo() {\n        self.bar(); // error: `self` value is a keyword only available in\n                    //        methods with a `self` parameter\n    }\n}\n```\n\nThe `self` keyword can only be used inside methods, which are associated\nfunctions (functions defined inside of a `trait` or `impl` block) that have a\n`self` receiver as its first parameter, like `self`, `&self`, `&mut self` or\n`self: &mut Pin<Self>` (this last one is an example of an [\"abitrary `self`\ntype\"](https://github.com/rust-lang/rust/issues/44874)).\n\nCheck if the associated function's parameter list should have contained a `self`\nreceiver for it to be a method, and add it if so. Example:\n\n```\nstruct Foo;\n\nimpl Foo {\n    fn bar(&self) {}\n\n    fn foo(self) { // `foo` is now a method.\n        self.bar(); // ok!\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\mut_gen.rs","byte_start":6140,"byte_end":6144,"line_start":157,"line_end":157,"column_start":42,"column_end":46,"is_primary":true,"text":[{"text":"        syn::visit_mut::visit_bin_op_mut(self, node);","highlight_start":42,"highlight_end":46}],"label":"`self` value is a keyword only available in methods with a `self` parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":5272,"byte_end":6200,"line_start":139,"line_end":160,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pub fn find_min_parsable_lines(splitted_file: Vec<&str>, num_line: usize) -> (usize, usize) {","highlight_start":1,"highlight_end":94},{"text":"    for j in 1..cmp::max(splitted_file.len() - num_line, num_line - 0) {","highlight_start":1,"highlight_end":73},{"text":"        // length","highlight_start":1,"highlight_end":18},{"text":"        for i in 0..j {","highlight_start":1,"highlight_end":24},{"text":"            if num_line + i - j <= 0 || num_line + i > splitted_file.len() {","highlight_start":1,"highlight_end":77},{"text":"                continue;","highlight_start":1,"highlight_end":26},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            // println!(\"{:#?}\", &splitted_file[(num_line + i - j)..(num_line + i)].join(\"\\t\\r\"));","highlight_start":1,"highlight_end":99},{"text":"            // println!(\"{} {}\", num_line + i - j, num_line + i);","highlight_start":1,"highlight_end":66},{"text":"            match ::syn::parse_str::<Stmt>(","highlight_start":1,"highlight_end":44},{"text":"                &splitted_file[(num_line + i - j)..(num_line + i)].join(\"\\t\\r\"),","highlight_start":1,"highlight_end":81},{"text":"            ) {","highlight_start":1,"highlight_end":16},{"text":"                Ok(stmt) => {","highlight_start":1,"highlight_end":30},{"text":"                    return (num_line + i - j, num_line + i);","highlight_start":1,"highlight_end":61},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"                Err(error) => { continue; }","highlight_start":1,"highlight_end":44},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        syn::visit_mut::visit_bin_op_mut(self, node);","highlight_start":1,"highlight_end":54},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    return (0, splitted_file.len());","highlight_start":1,"highlight_end":37},{"text":"}","highlight_start":1,"highlight_end":2}],"label":"this function doesn't have a `self` parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0424]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected value, found module `self`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:157:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn find_min_parsable_lines(splitted_file: Vec<&str>, num_line: usize) -> (usize, usize) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for j in 1..cmp::max(splitted_file.len() - num_line, num_line - 0) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        // length\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for i in 0..j {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        syn::visit_mut::visit_bin_op_mut(self, node);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`self` value is a keyword only available in methods with a `self` parameter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m158\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m159\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    return (0, splitted_file.len());\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis function doesn't have a `self` parameter\u001b[0m\n\n"}
{"message":"cannot find value `node` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src\\mut_gen.rs","byte_start":6146,"byte_end":6150,"line_start":157,"line_end":157,"column_start":48,"column_end":52,"is_primary":true,"text":[{"text":"        syn::visit_mut::visit_bin_op_mut(self, node);","highlight_start":48,"highlight_end":52}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `node` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:157:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m157\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        syn::visit_mut::visit_bin_op_mut(self, node);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"cannot find value `BinOpVisitor` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src\\mut_gen.rs","byte_start":6450,"byte_end":6462,"line_start":165,"line_end":165,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    BinOpVisitor.visit_file_mut(&mut syntax_tree);","highlight_start":5,"highlight_end":17}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `BinOpVisitor` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:165:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m165\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    BinOpVisitor.visit_file_mut(&mut syntax_tree);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"unused import: `serde_json::Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\cov_test.rs","byte_start":90,"byte_end":107,"line_start":5,"line_end":5,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use serde_json::Value;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\cov_test.rs","byte_start":86,"byte_end":108,"line_start":5,"line_end":5,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use serde_json::Value;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `serde_json::Value`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\cov_test.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse serde_json::Value;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"trait objects without an explicit `dyn` are deprecated","code":{"code":"bare_trait_objects","explanation":null},"level":"warning","spans":[{"file_name":"src\\cov_test.rs","byte_start":1989,"byte_end":1994,"line_start":80,"line_end":80,"column_start":63,"column_end":68,"is_primary":true,"text":[{"text":"pub fn parse(report_path: &str) -> Result<Vec<TraceInfo>, Box<Error>> {","highlight_start":63,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(bare_trait_objects)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `dyn`","code":null,"level":"help","spans":[{"file_name":"src\\cov_test.rs","byte_start":1989,"byte_end":1994,"line_start":80,"line_end":80,"column_start":63,"column_end":68,"is_primary":true,"text":[{"text":"pub fn parse(report_path: &str) -> Result<Vec<TraceInfo>, Box<Error>> {","highlight_start":63,"highlight_end":68}],"label":null,"suggested_replacement":"dyn Error","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: trait objects without an explicit `dyn` are deprecated\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\cov_test.rs:80:63\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mpub fn parse(report_path: &str) -> Result<Vec<TraceInfo>, Box<Error>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: use `dyn`: `dyn Error`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(bare_trait_objects)]` on by default\u001b[0m\n\n"}
{"message":"unused imports: `TokenStream`, `TokenTree`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\mut_gen.rs","byte_start":89,"byte_end":100,"line_start":4,"line_end":4,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"use proc_macro::{TokenStream, TokenTree};","highlight_start":18,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":102,"byte_end":111,"line_start":4,"line_end":4,"column_start":31,"column_end":40,"is_primary":true,"text":[{"text":"use proc_macro::{TokenStream, TokenTree};","highlight_start":31,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\mut_gen.rs","byte_start":72,"byte_end":113,"line_start":4,"line_end":4,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use proc_macro::{TokenStream, TokenTree};","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `TokenStream`, `TokenTree`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:4:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse proc_macro::{TokenStream, TokenTree};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `proc_macro2::Span`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\mut_gen.rs","byte_start":119,"byte_end":136,"line_start":5,"line_end":5,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use proc_macro2::Span;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\mut_gen.rs","byte_start":115,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use proc_macro2::Span;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `proc_macro2::Span`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse proc_macro2::Span;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `quote_spanned`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\mut_gen.rs","byte_start":158,"byte_end":171,"line_start":6,"line_end":6,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"use quote::{quote, quote_spanned};","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\mut_gen.rs","byte_start":156,"byte_end":171,"line_start":6,"line_end":6,"column_start":18,"column_end":33,"is_primary":true,"text":[{"text":"use quote::{quote, quote_spanned};","highlight_start":18,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `quote_spanned`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:6:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse quote::{quote, quote_spanned};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `path::Path`, `self`, `str::FromStr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\mut_gen.rs","byte_start":260,"byte_end":264,"line_start":11,"line_end":11,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    io::{self, BufRead},","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":281,"byte_end":291,"line_start":12,"line_end":12,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    path::Path,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":321,"byte_end":333,"line_start":14,"line_end":14,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    str::FromStr,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\mut_gen.rs","byte_start":260,"byte_end":266,"line_start":11,"line_end":11,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"    io::{self, BufRead},","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":274,"byte_end":291,"line_start":11,"line_end":12,"column_start":24,"column_end":15,"is_primary":true,"text":[{"text":"    io::{self, BufRead},","highlight_start":24,"highlight_end":25},{"text":"    path::Path,","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":314,"byte_end":333,"line_start":13,"line_end":14,"column_start":21,"column_end":17,"is_primary":true,"text":[{"text":"    process::Command,","highlight_start":21,"highlight_end":22},{"text":"    str::FromStr,","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `path::Path`, `self`, `str::FromStr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:11:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    io::{self, BufRead},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    path::Path,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    process::Command,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    str::FromStr,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `DeriveInput`, `Expr`, `File`, `ItemFn`, `Item`, `LitInt`, `Lit`, `Result`, `Type`, `Visit`, `parse_macro_input`, `parse_quote`, `self`, `self`, `spanned::Spanned`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\mut_gen.rs","byte_start":376,"byte_end":393,"line_start":19,"line_end":19,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    parse_macro_input, parse_quote,","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":395,"byte_end":406,"line_start":19,"line_end":19,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"    parse_macro_input, parse_quote,","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":413,"byte_end":429,"line_start":20,"line_end":20,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"    spanned::Spanned,","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":444,"byte_end":448,"line_start":21,"line_end":21,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"    visit::{self, Visit},","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":450,"byte_end":455,"line_start":21,"line_end":21,"column_start":19,"column_end":24,"is_primary":true,"text":[{"text":"    visit::{self, Visit},","highlight_start":19,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":475,"byte_end":479,"line_start":22,"line_end":22,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"    visit_mut::{self, VisitMut},","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":497,"byte_end":508,"line_start":23,"line_end":23,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":510,"byte_end":514,"line_start":23,"line_end":23,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":18,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":516,"byte_end":520,"line_start":23,"line_end":23,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":522,"byte_end":526,"line_start":23,"line_end":23,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":30,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":528,"byte_end":534,"line_start":23,"line_end":23,"column_start":36,"column_end":42,"is_primary":true,"text":[{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":36,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":536,"byte_end":539,"line_start":23,"line_end":23,"column_start":44,"column_end":47,"is_primary":true,"text":[{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":44,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":541,"byte_end":547,"line_start":23,"line_end":23,"column_start":49,"column_end":55,"is_primary":true,"text":[{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":49,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":549,"byte_end":555,"line_start":23,"line_end":23,"column_start":57,"column_end":63,"is_primary":true,"text":[{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":57,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":563,"byte_end":567,"line_start":23,"line_end":23,"column_start":71,"column_end":75,"is_primary":true,"text":[{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":71,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\mut_gen.rs","byte_start":376,"byte_end":463,"line_start":19,"line_end":22,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    parse_macro_input, parse_quote,","highlight_start":5,"highlight_end":36},{"text":"    spanned::Spanned,","highlight_start":1,"highlight_end":22},{"text":"    visit::{self, Visit},","highlight_start":1,"highlight_end":26},{"text":"    visit_mut::{self, VisitMut},","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":475,"byte_end":481,"line_start":22,"line_end":22,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    visit_mut::{self, VisitMut},","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":490,"byte_end":555,"line_start":22,"line_end":23,"column_start":32,"column_end":63,"is_primary":true,"text":[{"text":"    visit_mut::{self, VisitMut},","highlight_start":32,"highlight_end":33},{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":1,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\mut_gen.rs","byte_start":561,"byte_end":567,"line_start":23,"line_end":23,"column_start":69,"column_end":75,"is_primary":true,"text":[{"text":"    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,","highlight_start":69,"highlight_end":75}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `DeriveInput`, `Expr`, `File`, `ItemFn`, `Item`, `LitInt`, `Lit`, `Result`, `Type`, `Visit`, `parse_macro_input`, `parse_quote`, `self`, `self`, `spanned::Spanned`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    parse_macro_input, parse_quote,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    spanned::Spanned,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    visit::{self, Visit},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    visit_mut::{self, VisitMut},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    DeriveInput, Expr, File, Item, ItemFn, Lit, LitInt, Result, Stmt, Type,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"This error occurs when the compiler was unable to infer the concrete type of a\nvariable. It can occur for several cases, the most common of which is a\nmismatch in the expected type that the compiler inferred for a variable's\ninitializing expression, and the actual type explicitly assigned to the\nvariable.\n\nFor example:\n\n```compile_fail,E0308\nlet x: i32 = \"I am not a number!\";\n//     ~~~   ~~~~~~~~~~~~~~~~~~~~\n//      |             |\n//      |    initializing expression;\n//      |    compiler infers type `&str`\n//      |\n//    type `i32` assigned to variable `x`\n```\n"},"level":"error","spans":[{"file_name":"src\\mut_gen.rs","byte_start":3068,"byte_end":3078,"line_start":90,"line_end":90,"column_start":48,"column_end":58,"is_primary":true,"text":[{"text":"    let (start, end) = find_min_parsable_lines(&lines_vec, num_line);","highlight_start":48,"highlight_end":58}],"label":"expected struct `std::vec::Vec`, found reference","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `std::vec::Vec<&str>`\nfound reference `&std::vec::Vec<&str>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider removing the borrow","code":null,"level":"help","spans":[{"file_name":"src\\mut_gen.rs","byte_start":3068,"byte_end":3078,"line_start":90,"line_end":90,"column_start":48,"column_end":58,"is_primary":true,"text":[{"text":"    let (start, end) = find_min_parsable_lines(&lines_vec, num_line);","highlight_start":48,"highlight_end":58}],"label":null,"suggested_replacement":"lines_vec","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:90:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let (start, end) = find_min_parsable_lines(&lines_vec, num_line);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected struct `std::vec::Vec`, found reference\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: consider removing the borrow: `lines_vec`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1mstd::vec::Vec<&str>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found reference `\u001b[0m\u001b[0m\u001b[1m&std::vec::Vec<&str>\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"unused import: `BufRead`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\mut_gen.rs","byte_start":266,"byte_end":273,"line_start":11,"line_end":11,"column_start":16,"column_end":23,"is_primary":true,"text":[{"text":"    io::{self, BufRead},","highlight_start":16,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `BufRead`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:11:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    io::{self, BufRead},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `VisitMut`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\mut_gen.rs","byte_start":481,"byte_end":489,"line_start":22,"line_end":22,"column_start":23,"column_end":31,"is_primary":true,"text":[{"text":"    visit_mut::{self, VisitMut},","highlight_start":23,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `VisitMut`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\mut_gen.rs:22:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    visit_mut::{self, VisitMut},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to 4 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 4 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0308, E0424, E0425.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0308, E0424, E0425.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
